version: "2"
services:
  broker:
    networks:
      - mandy
    image: confluentinc/cp-kafka:7.4.4
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_LISTENERS: "PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"

  init-kafka:
    networks:
      - mandy
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - broker
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server broker:29092 --list

      echo -e 'Creating kafka topics'

      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic topic_projectm_cmd_persist --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic topic_projectm_cmd_insights_gather --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic topic_projectm_cmd_insights_structure --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic topic_projectm_cmd_azdo_proxy --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:29092 --list
      "
  schema-registry:
    networks:
      - mandy
    image: confluentinc/cp-schema-registry:7.4.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29092"
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  connect:
    networks:
      - mandy
    image: cnfldemos/cp-server-connect-datagen:0.5.3-7.1.0
    hostname: connect
    container_name: connect
    depends_on:
      - broker
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.4.1.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

  control-center:
    networks:
      - mandy
    image: confluentinc/cp-enterprise-control-center:7.4.1
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
      - schema-registry
      - connect
      - ksqldb-server
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:29092"
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: "connect:8083"
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  ksqldb-server:
    networks:
      - mandy
    image: confluentinc/cp-ksqldb-server:7.4.1
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - broker
      - connect
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "broker:29092"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"

  ksqldb-cli:
    networks:
      - mandy
    image: confluentinc/cp-ksqldb-cli:7.4.1
    container_name: ksqldb-cli
    depends_on:
      - broker
      - connect
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  ksql-datagen:
    networks:
      - mandy
    image: confluentinc/ksqldb-examples:7.4.1
    hostname: ksql-datagen
    container_name: ksql-datagen
    depends_on:
      - ksqldb-server
      - broker
      - schema-registry
      - connect
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b broker:29092 1 40 && \
      echo Waiting for Confluent Schema Registry to be ready... && \
      cub sr-ready schema-registry 8081 40 && \
      echo Waiting a few seconds for topic creation to finish... && \
      sleep 11 && \
      tail -f /dev/null'"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      STREAMS_BOOTSTRAP_SERVERS: broker:29092
      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
      STREAMS_SCHEMA_REGISTRY_PORT: 8081

  rest-proxy:
    networks:
      - mandy
    image: confluentinc/cp-kafka-rest:7.4.4
    depends_on:
      - broker
      - schema-registry
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: "broker:29092"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"

  mandy-db:
    networks:
      - mandy
    depends_on:
      - broker
    build: ./src/db
    ports:
      - 8091-8097:8091-8097
      - 9123:9123
      - 11207:11207
      - 11210:11210
      - 11280:11280
      - 18091-18097:18091-18097
    # volumes:
    #   - couchbase-data:/opt/couchbase/var/lib/couchbase

  mandy-kafka-api:
    networks:
      - mandy
    depends_on:
      - broker
    build: ./src/apis/kafka-api
    ports:
      - 8006:8002
    environment:
      - BOOTSTRAP_SERVERS:broker:29092
      - CLIENT_ID=mandy-kafka-api

  mandy-cb-api:
    networks:
      - mandy
    depends_on:
      - mandy-db
    build: ./src/apis/couchbase-api
    ports:
      - 8005:8001
    environment:
      - COUCHBASE_HOST=mandy-db
      - COUCHBASE_USERNAME=root
      - COUCHBASE_PASSWORD=R007__..

  mandy-azdo-proxy-api:
    networks:
      - mandy
    build: ./src/apis/azdo-proxy-api
    ports:
      - 5079:5079
    environment:
      - BOOTSTRAP_SERVERS=broker:29092
      - GROUP_ID=azdo_proxy_worker_001
      - WORKER_TOPIC=topic_projectm_cmd_azdo_proxy
      - PERSIST_TOPIC=topic_projectm_cmd_persist
      - PERSIST_URL=http://mandy-kafka-api:8002/kafka/topic/publish

  mandy-persist-worker:
    networks:
      - mandy
    depends_on:
      - broker
      - mandy-cb-api
    build: ./src/workers/persist
    environment:
      - GROUP_ID=persist_worker_001
      - BOOTSTRAP_SERVERS=broker:29092
      - WORKER_TOPIC=topic_projectm_cmd_persist
      - PERSIST_URL=http://mandy-cb-api:8001/cb/cmd
      - BULK_PERSIST_URL=http://mandy-cb-api:8001/cb/cmds
      - STORE_QUERY_URL=http://mandy-cb-api:8001/cb/qry

  mandy-azdo-worker:
    networks:
      - mandy
    depends_on:
      - broker
      - mandy-azdo-proxy-api
    build: ./src/workers/azdo
    environment:
      - GROUP_ID=azdo_worker_001
      - BOOTSTRAP_SERVERS=broker:29092
      - WORKER_TOPIC=topic_projectm_cmd_insights_gather
      - PERSIST_URL=http://mandy-kafka-api:8002/kafka/topic/publish
      - PERSIST_TOPIC=topic_projectm_cmd_persist
      - API_KEY=<<key>>=
      - STORE_QUERY_URL=http://mandy-cb-api:8001/cb/qry

  mandy-insights-worker:
    networks:
      - mandy
    depends_on:
      - broker
    build: ./src/workers/insights
    environment:
      - BOOTSTRAP_SERVERS=broker:29092
      - GROUP_ID=insights_worker_001
      - WORKER_TOPIC=topic_projectm_cmd_insights_structure
      - PERSIST_TOPIC=topic_projectm_cmd_persist
      - PERSIST_URL=http://mandy-kafka-api:8002/kafka/topic/publish
      - STORE_QUERY_URL=http://mandy-cb-api:8001/cb/qry

  mandy-azdo-proxy-worker:
    networks:
      - mandy
    depends_on:
      - broker
    build: ./src/workers/azdo_proxy
    environment:
      - BOOTSTRAP_SERVERS=broker:29092
      - WORKER_TOPIC=topic_projectm_cmd_azdo_proxy
      - GROUP_ID=azdo_proxy_worker_001
      - PERSIST_TOPIC=topic_projectm_cmd_persist
      - PERSIST_URL=http://mandy-kafka-api:8002/kafka/topic/publish
      - AZDO_PROXY_BASE_URL=http://mandy-azdo-proxy-api:80
      - API_KEY=<<key>>=
      - STORE_QUERY_URL=http://mandy-cb-api:8001/cb/qry

  mandy-ui-api:
    networks:
      - mandy
    depends_on:
      - broker
      - mandy-cb-api
    build: ./src/apis/ui-api
    ports:
      - 3004:3002
    environment:
      - PORT=3001
      - NODE_ENV=production
      - KAFKA_API_BASE_URL=http://mandy-kafka-api:8002
      - CB_API_BASE_URL=http://mandy-cb-api:8001

  mandy-ui:
    networks:
      - mandy
    depends_on:
      - mandy-ui-api
    build: ./src/ui/projectm-ui
    ports:
      - 8080:80
    environment:
      - VUE_APP_AZDO_API_KEY=<<key>>=
      - VUE_APP_DEFAULT_QUERY_FOLDER=Shared Queries/Customers and Emerging Markets/Rapid Response/N2 Chapmans Peak Project Team/Reboot
      - VUE_APP_UI_API_BASE_URL=http://localhost:3004/ui-api

networks:
  mandy:
    driver: bridge
