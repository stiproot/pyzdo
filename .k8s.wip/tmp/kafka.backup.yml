---
apiVersion: v1
kind: Namespace
metadata:
  name: project-m-dev
---
# kafka-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: project-m-dev
data:
  KAFKA_NODE_ID: "1"
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
  KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:9092"
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
  KAFKA_JMX_PORT: "9101"
  KAFKA_JMX_HOSTNAME: "localhost"
  KAFKA_PROCESS_ROLES: "broker,controller"
  KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:29093"
  KAFKA_LISTENERS: "PLAINTEXT://localhost:29092,CONTROLLER://localhost:9093,PLAINTEXT_HOST://0.0.0.0:9092"
  KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
  KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
  CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
---
# kafka-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker
  namespace: project-m-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      containers:
        - name: kafka-broker
          image: confluentinc/cp-kafka:7.4.1
          envFrom:
            - configMapRef:
                name: kafka-config
          ports:
            - containerPort: 9092
            - containerPort: 9101
---
# kafka-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: project-m-dev
spec:
  selector:
    app: kafka-broker
  ports:
    - name: kafka-port-9092
      protocol: TCP
      port: 9092
      targetPort: 9092
    - name: kafka-port-9091
      protocol: TCP
      port: 9101
      targetPort: 9101
---
# init-kafka-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: init-kafka
  namespace: project-m-dev
spec:
  template:
    spec:
      containers:
        - name: init-kafka
          image: confluentinc/cp-kafka:7.4.1
          command: ["/bin/sh", "-c"]
          args:
            - |
              kafka-topics --bootstrap-server kafka-service.project-m-dev:29092 --list

              echo -e 'Creating kafka topics'

              kafka-topics --bootstrap-server kafka-service.project-m-dev:29092 --create --if-not-exists --topic topic_projectm_cmd_persist --replication-factor 1 --partitions 1
              kafka-topics --bootstrap-server kafka-service.project-m-dev:29092 --create --if-not-exists --topic topic_projectm_cmd_insights_gather --replication-factor 1 --partitions 1
              kafka-topics --bootstrap-server kafka-service.project-m-dev:29092 --create --if-not-exists --topic topic_projectm_cmd_insights_structure --replication-factor 1 --partitions 1
              kafka-topics --bootstrap-server kafka-service.project-m-dev:29092 --create --if-not-exists --topic topic_projectm_cmd_azdo_proxy --replication-factor 1 --partitions 1

              echo -e 'Successfully created the following topics:'
              kafka-topics --bootstrap-server kafka-service.project-m-dev:29092 --list
      restartPolicy: OnFailure
  backoffLimit: 4
---
# schema-registry-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  namespace: project-m-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      containers:
        - name: schema-registry
          image: confluentinc/cp-schema-registry:7.4.1
          ports:
            - containerPort: 8081
          env:
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: schema-registry
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: "kafka-service.project-m-dev:29092"
            - name: SCHEMA_REGISTRY_LISTENERS
              value: http://0.0.0.0:8081
---
# connect-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
  namespace: project-m-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
        - name: kafka-connect
          image: cnfldemos/cp-server-connect-datagen:0.5.3-7.1.0
          ports:
            - containerPort: 8083
          env:
            - name: CONNECT_BOOTSTRAP_SERVERS
              value: "kafka-service.project-m-dev:29092"
            - name: CONNECT_REST_ADVERTISED_HOST_NAME
              value: connect
            - name: CONNECT_GROUP_ID
              value: compose-connect-group
            - name: CONNECT_CONFIG_STORAGE_TOPIC
              value: docker-connect-configs
            - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_OFFSET_FLUSH_INTERVAL_MS
              value: "10000"
            - name: CONNECT_OFFSET_STORAGE_TOPIC
              value: docker-connect-offsets
            - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_STATUS_STORAGE_TOPIC
              value: docker-connect-status
            - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_KEY_CONVERTER
              value: "org.apache.kafka.connect.storage.StringConverter"
            - name: CONNECT_VALUE_CONVERTER
              value: "io.confluent.connect.avro.AvroConverter"
            - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
              value: "http://schema-registry:8081"
            - name: CLASSPATH
              value: "/usr/share/java/monitoring-interceptors/monitoring-interceptors-7.4.1.jar"
            - name: CONNECT_PRODUCER_INTERCEPTOR_CLASSES
              value: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            - name: CONNECT_CONSUMER_INTERCEPTOR_CLASSES
              value: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
            - name: CONNECT_PLUGIN_PATH
              value: "/usr/share/java,/usr/share/confluent-hub-components"
            - name: CONNECT_LOG4J_LOGGERS
              value: "org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR"
---
