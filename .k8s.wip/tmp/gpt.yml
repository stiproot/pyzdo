---
apiVersion: v1
kind: Service
metadata:
  name: broker
spec:
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
    - name: jmx
      port: 9101
      targetPort: 9101
  selector:
    app: broker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broker
  template:
    metadata:
      labels:
        app: broker
    spec:
      containers:
        - name: broker
          image: confluentinc/cp-kafka:7.4.1
          ports:
            - containerPort: 9092
            - containerPort: 9101
          env:
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_JMX_PORT
              value: "9101"
            - name: KAFKA_JMX_HOSTNAME
              value: "localhost"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@broker:29093"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_LOG_DIRS
              value: "/tmp/kraft-combined-logs"
            - name: CLUSTER_ID
              value: "MkU3OEVBNTcwNTJENDM2Qk"
---
apiVersion: v1
kind: Service
metadata:
  name: init-kafka
spec:
  selector:
    app: init-kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: init-kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: init-kafka
  template:
    metadata:
      labels:
        app: init-kafka
    spec:
      containers:
        - name: init-kafka
          image: confluentinc/cp-kafka:7.4.1
          command: ["/bin/sh", "-c"]
          args:
            - |
              kafka-topics --bootstrap-server broker:29092 --list

              echo -e 'Creating kafka topics'

              kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic topic_projectm_cmd_persist --replication-factor 1 --partitions 1
              kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic topic_projectm_cmd_insights_gather --replication-factor 1 --partitions 1
              kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic topic_projectm_cmd_insights_structure --replication-factor 1 --partitions 1
              kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic topic_projectm_cmd_azdo_proxy --replication-factor 1 --partitions 1

              echo -e 'Successfully created the following topics:'
              kafka-topics --bootstrap-server broker:29092 --list
---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry
spec:
  ports:
    - port: 8081
      targetPort: 8081
  selector:
    app: schema-registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      containers:
        - name: schema-registry
          image: confluentinc/cp-schema-registry:7.4.1
          ports:
            - containerPort: 8081
          env:
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: schema-registry
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: "broker:29092"
            - name: SCHEMA_REGISTRY_LISTENERS
              value: http://0.0.0.0:8081
---
apiVersion: v1
kind: Service
metadata:
  name: connect
spec:
  ports:
    - port: 8083
      targetPort: 8083
  selector:
    app: connect
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: connect
  template:
    metadata:
      labels:
        app: connect
    spec:
      containers:
        - name: connect
          image: cnfldemos/cp-server-connect-datagen:0.5.3-7.1.0
          ports:
            - containerPort: 8083
          env:
            - name: CONNECT_BOOTSTRAP_SERVERS
              value: "broker:29092"
            - name: CONNECT_REST_ADVERTISED_HOST_NAME
              value: connect
            - name: CONNECT_GROUP_ID
              value: compose-connect-group
            - name: CONNECT_CONFIG_STORAGE_TOPIC
              value: docker-connect-configs
            - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_OFFSET_FLUSH_INTERVAL_MS
              value: "10000"
            - name: CONNECT_OFFSET_STORAGE_TOPIC
              value: docker-connect-offsets
            - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_STATUS_STORAGE_TOPIC
              value: docker-connect-status
            - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_KEY_CONVERTER
              value: org.apache.kafka.connect.storage.StringConverter
            - name: CONNECT_VALUE_CONVERTER
              value: io.confluent.connect.avro.AvroConverter
            - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
              value: "http://schema-registry:8081"
            - name: CLASSPATH
              value: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.4.1.jar
            - name: CONNECT_PRODUCER_INTERCEPTOR_CLASSES
              value: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            - name: CONNECT_CONSUMER_INTERCEPTOR_CLASSES
              value: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
            - name: CONNECT_PLUGIN_PATH
              value: "/usr/share/java,/usr/share/confluent-hub-components"
            - name: CONNECT_LOG4J_LOGGERS
              value: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
---
apiVersion: v1
kind: Service
metadata:
  name: control-center
spec:
  ports:
    - port: 9021
      targetPort: 9021
  selector:
    app: control-center
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: control-center
spec:
  replicas: 1
  selector:
    matchLabels:
      app: control-center
  template:
    metadata:
      labels:
        app: control-center
    spec:
      containers:
        - name: control-center
          image: confluentinc/cp-enterprise-control-center:7.4.1
          ports:
            - containerPort: 9021
          env:
            - name: CONTROL_CENTER_BOOTSTRAP_SERVERS
              value: "broker:29092"
            - name: CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER
              value: "connect:8083"
            - name: CONTROL_CENTER_KSQL_KSQLDB1_URL
              value: "http://ksqldb-server:8088"
            - name: CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL
              value: "http://localhost:8088"
            - name: CONTROL_CENTER_SCHEMA_REGISTRY_URL
              value: "http://schema-registry:8081"
            - name: CONTROL_CENTER_REPLICATION_FACTOR
              value: "1"
            - name: CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS
              value: "1"
            - name: CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS
              value: "1"
            - name: CONFLUENT_METRICS_TOPIC_REPLICATION
              value: "1"
            - name: PORT
              value: "9021"
---
apiVersion: v1
kind: Service
metadata:
  name: ksqldb-server
spec:
  ports:
    - port: 8088
      targetPort: 8088
  selector:
    app: ksqldb-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksqldb-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ksqldb-server
  template:
    metadata:
      labels:
        app: ksqldb-server
    spec:
      containers:
        - name: ksqldb-server
          image: confluentinc/cp-ksqldb-server:7.4.1
          ports:
            - containerPort: 8088
          env:
            - name: KSQL_CONFIG_DIR
              value: "/etc/ksql"
            - name: KSQL_BOOTSTRAP_SERVERS
              value: "broker:29092"
            - name: KSQL_HOST_NAME
              value: ksqldb-server
            - name: KSQL_LISTENERS
              value: "http://0.0.0.0:8088"
            - name: KSQL_CACHE_MAX_BYTES_BUFFERING
              value: "0"
            - name: KSQL_KSQL_SCHEMA_REGISTRY_URL
              value: "http://schema-registry:8081"
            - name: KSQL_PRODUCER_INTERCEPTOR_CLASSES
              value: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            - name: KSQL_CONSUMER_INTERCEPTOR_CLASSES
              value: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
            - name: KSQL_KSQL_CONNECT_URL
              value: "http://connect:8083"
            - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE
              value: "true"
            - name: KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE
              value: "true"
---
# Uncomment the following sections if needed
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: ksqldb-cli
# spec:
#   selector:
#     app: ksqldb-cli
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ksqldb-cli
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: ksqldb-cli
#   template:
#     metadata:
#       labels:
#         app: ksqldb-cli
#     spec:
#       containers:
#         - name: ksqldb-cli
#           image: confluentinc/cp-ksqldb-cli:7.4.1
#           command: ["/bin/sh"]
#           args: [""]
#           tty: true
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: ksql-datagen
# spec:
#   selector:
#     app: ksql-datagen
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ksql-datagen
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: ksql-datagen
#   template:
#     metadata:
#       labels:
#         app: ksql-datagen
#     spec:
#       containers:
#         - name: ksql-datagen
#           image: confluentinc/ksqldb-examples:7.4.1
#           command: ["bash", "-c"]
#           args:
#             - |
#               echo Waiting for Kafka to be ready... && \
#               cub kafka-ready -b broker:29092 1 40 && \
#               echo Waiting for Confluent Schema Registry to be ready... && \
#               cub sr-ready schema-registry 8081 40 && \
#               echo Waiting a few seconds for topic creation to finish... && \
#               sleep 11 && \
#               tail -f /dev/null
#           env:
#             - name: KSQL_CONFIG_DIR
#               value: "/etc/ksql"
#             - name: STREAMS_BOOTSTRAP_SERVERS
#               value: broker:29092
#             - name: STREAMS_SCHEMA_REGISTRY_HOST
#               value: schema-registry
#             - name: STREAMS_SCHEMA_REGISTRY_PORT
#               value: "8081"
---
apiVersion: v1
kind: Service
metadata:
  name: rest-proxy
spec
